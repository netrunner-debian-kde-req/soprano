Author: Christophe Giboudeaux <cgiboudeaux@gmx.com>
Author: Rene Engelhard <rene@debian.org>
Description: Try to find clucene-shared as well
 .
 Fixes a linker error when SOPRANO_DISABLE_CLUCENE_INDEX is FALSE.
Bug-Debian: http://bugs.debian.org/718369
Origin: upstream, commit:4bfdfdfdee03080ec9ca21eeb168c2ab9dbba0bb

--- soprano-2.9.2+dfsg.1.orig/cmake/modules/FindCLucene.cmake
+++ soprano-2.9.2+dfsg.1/cmake/modules/FindCLucene.cmake
@@ -4,7 +4,8 @@
 #
 # CLUCENE_INCLUDE_DIR  = where CLucene/StdHeader.h can be found
 # CLUCENE_LIBRARY_DIR  = where CLucene/clucene-config.h can be found
-# CLUCENE_LIBRARY      = the library to link against CLucene
+# CLUCENE_LIBRARY      = the library to link against CLucene DEPRECATED Use CLUCENE_LIBRARIES
+# CLUCENE_LIBRARIES    = the libraries to link against CLucene
 # CLUCENE_VERSION      = The CLucene version string
 # CLucene_FOUND        = set to 1 if clucene is found
 #
@@ -36,13 +37,27 @@ SET(TRIAL_INCLUDE_PATHS
   /sw/include
   /usr/pkg/include
   )
+
 FIND_LIBRARY_WITH_DEBUG(CLUCENE_LIBRARY
   WIN32_DEBUG_POSTFIX d
   NAMES clucene clucene-core
   PATHS ${TRIAL_LIBRARY_PATHS})
-IF (CLUCENE_LIBRARY)
-  MESSAGE(STATUS "Found CLucene library: ${CLUCENE_LIBRARY}")
-ENDIF (CLUCENE_LIBRARY)
+# On Linux, Soprano needs both clucene-core and clucene-shared
+# CLUCENE_LIBRARIES contains both entries if available
+set(CLUCENE_LIBRARIES ${CLUCENE_LIBRARY})
+
+find_library(CLUCENE_SHARED_LIBRARY
+  NAMES clucene-shared
+  HINTS ${TRIAL_LIBRARY_PATHS}
+)
+
+if(CLUCENE_SHARED_LIBRARY)
+  set(CLUCENE_LIBRARIES ${CLUCENE_LIBRARIES} ${CLUCENE_SHARED_LIBRARY})
+endif()
+
+IF(CLUCENE_LIBRARIES)
+  message(STATUS "Found CLucene: ${CLUCENE_LIBRARIES}")
+ENDIF (CLUCENE_LIBRARIES)
 FIND_PATH(CLUCENE_INCLUDE_DIR
   NAMES CLucene.h
   PATHS ${TRIAL_INCLUDE_PATHS})
@@ -77,13 +92,13 @@ IF (CLUCENE_LIBRARY_DIR)
   ENDIF (CLMATCH)
 ENDIF (CLUCENE_LIBRARY_DIR)
 
-IF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARY AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
+IF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARIES AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
   SET(CLucene_FOUND TRUE)
-ENDIF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARY AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
+ENDIF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARIES AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
 
 IF(CLucene_FOUND)
   IF(NOT CLucene_FIND_QUIETLY)
-    MESSAGE(STATUS "Found CLucene: ${CLUCENE_LIBRARY}")
+    MESSAGE(STATUS "Found CLucene: ${CLUCENE_LIBRARIES}")
   ENDIF(NOT CLucene_FIND_QUIETLY)
 ELSE(CLucene_FOUND)
   IF(CLucene_FIND_REQUIRED)
@@ -94,5 +109,7 @@ ENDIF(CLucene_FOUND)
 MARK_AS_ADVANCED(
   CLUCENE_INCLUDE_DIR 
   CLUCENE_LIBRARY_DIR 
+  CLUCENE_SHARED_LIBRARY 
   CLUCENE_LIBRARY 
+  CLUCENE_LIBRARIES 
   )
--- soprano-2.9.2+dfsg.1.orig/index/CMakeLists.txt
+++ soprano-2.9.2+dfsg.1/index/CMakeLists.txt
@@ -46,7 +46,7 @@ target_link_libraries(
   sopranoindex
   ${QT_QTCORE_LIBRARY}
   soprano
-  ${CLUCENE_LIBRARY}
+  ${CLUCENE_LIBRARIES}
 )
 
 set_target_properties(
--- soprano-2.9.2+dfsg.1.orig/test/CMakeLists.txt
+++ soprano-2.9.2+dfsg.1/test/CMakeLists.txt
@@ -156,12 +156,12 @@ if(BUILD_CLUCENE_INDEX)
   # TString test
   qt4_automoc(tstringtest tstringtest.cpp)
   add_executable(tstringtest tstringtest.cpp stringpool.cpp ../index/tstring.cpp)
-  target_link_libraries(tstringtest ${QT_QTCORE_LIBRARY} ${QT_QTTEST_LIBRARY} ${CLUCENE_LIBRARY})
+  target_link_libraries(tstringtest ${QT_QTCORE_LIBRARY} ${QT_QTTEST_LIBRARY} ${CLUCENE_LIBRARIES})
   add_test(tstringtest ${EXECUTABLE_OUTPUT_PATH}/tstringtest)
 
   qt4_automoc(cluceneindextest cluceneindextest.cpp)
   add_executable(cluceneindextest cluceneindextest.cpp stringpool.cpp)
-  target_link_libraries(cluceneindextest soprano sopranoindex ${QT_QTCORE_LIBRARY} ${QT_QTTEST_LIBRARY} ${CLUCENE_LIBRARY})
+  target_link_libraries(cluceneindextest soprano sopranoindex ${QT_QTCORE_LIBRARY} ${QT_QTTEST_LIBRARY} ${CLUCENE_LIBRARIES})
   add_test(cluceneindextest ${EXECUTABLE_OUTPUT_PATH}/cluceneindextest)
 
   qt4_automoc(indexmodelmultithreadingtest indexmodelmultithreadingtest.cpp)
